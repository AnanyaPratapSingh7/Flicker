services:
  # ElizaOS Main Runtime
  elizaos-main:
    image: eliza:latest
    container_name: flicker-elizaos-main
    environment:
      - ELIZAOS_PORT=3000
      - ELIZAOS_MODE=development
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - AI_OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - AI_OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - DEFAULT_MODEL_PROVIDER=openrouter
      - DATABASE_URL=sqlite:/data/elizaos.db
    ports:
      - "3000:3000"
    volumes:
      - ./data:/data
      - ./tokenizers:/app/tokenizers
    networks:
      - flicker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Integration API
  integration-api:
    build:
      context: .
      dockerfile: docker/integration-api/Dockerfile
    container_name: flicker-integration-api
    environment:
      - INTEGRATION_PORT=3006
      - ELIZA_API_URL=http://elizaos-main:3000
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - DATABASE_URL=sqlite:/app/data/flicker.db
      - ELIZAOS_INTEGRATION_MODE=api
    ports:
      - "3006:3006"
    volumes:
      - ./data:/app/data
    networks:
      - flicker-network
    depends_on:
      elizaos-main:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # API Server
  api-server:
    build:
      context: .
      dockerfile: docker/api-server/Dockerfile
    container_name: flicker-api-server
    environment:
      - API_PORT=3002
      - DATABASE_URL=sqlite:/app/data/flicker.db
      #- INTEGRATION_URL=http://integration-api:3001
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
    ports:
      - "3002:3002"
    volumes:
      - ./api-server:/app/api-server
      - ./data:/app/data
    networks:
      - flicker-network
    command: ["node", "api-server/server.js"]
    #depends_on:
    #  integration-api:
    #    condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # OpenRouter Proxy
  openrouter-proxy:
    build:
      context: .
      dockerfile: docker/openrouter-proxy/Dockerfile
    container_name: flicker-openrouter-proxy
    environment:
      - PORT=3003
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
    ports:
      - "3003:3003"
    networks:
      - flicker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/api/ai-chat/ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: flicker-frontend
    environment:
      - PORT=3004
      - VITE_OPENROUTER_SERVER_URL=http://localhost:3003
      - VITE_API_ENDPOINT=/api/ai-chat
      - VITE_INTEGRATION_URL=http://localhost:3006
      - VITE_API_SERVER_URL=http://localhost:3002
      - VITE_OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - VITE_OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - VITE_DATABASE_URL=sqlite:/app/data/flicker.db
    ports:
      - "3004:3004"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.ts:/app/vite.config.ts
      - ./data:/app/data
    networks:
      - flicker-network
    depends_on:
      - openrouter-proxy
      - api-server
      - integration-api

networks:
  flicker-network:
    driver: bridge
